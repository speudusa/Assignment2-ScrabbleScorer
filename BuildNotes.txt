6/2 ------
created starter-code-notes to help me create directions
    * adding to comments as i write directions

redesigned the ScoringAlgorithms method.
    else ==> ScrabbleScorer as the only other option
(was initial if(x == 1))

areas of initial concern:
    C) Scoring Algorithms --> want original word and the lower word, BUT we haven't made the RunProgram that will handle this yet
        * idea: update this when building the RunProgram method???

6/1 ------
added notes to current build to help with creating student instructions.
    * areas to watch:  explaining how to test Transform, translating scoringAlorithms JS ==> C#




5/27 ------

updated language so method names match JS function names

5/26 ------

streamlined a few methods while reviewing JS directions


5/24 ------

5 methods all together

each method is connected to each other some how

WelcomeProgram()
    >> ScoreProgram(string option)
        >> 1. ScrabbleScorer(string word) || 2. SimpleScorer(string word) || 3. BonusVowels(string word)


All methods are static, built outside the Main method, but within the same Program class

All methods are void

----------------------
Build notes

I started with while block and if/else blocks
create a working program without any methods

recommend starting with that then reconfiguring into methods
QUESTION:  might have that as the starter code??? or would that be confusing???

Basically rearranged code blocks
- SCORES: each score type if block was turned into its own method
    - parameter: userWord
    - ScrabbleScorer - Has 3 main loops/parts.
        - 1. loops to convert KVP from old dict to new dict
        - 2. loop to run through the word with the new dict
        - 3. use loop and new dict to calculate total 
    -SimpleScorer - once loop to update a total
    -Bonus Vowels - an if/else to update a total
- SCORE SELECTION: while loop/if blocks updated into a method
    - parameters: userInput string number - each number = a method
    - each if block corresponds to score method - so call methods here 
    - this is where user input comes in, as well as correcting for case issues (ToLower or ToUpper)
        - passed to scoring methods
    - This is where the while loop runs or terminates based on user input
- WELCOME PROGRAM: introduce app, take score selctions, call scoreSelection from here
    - parameterless
    - CWs print directions
    - CRL holds user input
    - input passed to scoreSelection



Test bewteen all steps.  test test test!